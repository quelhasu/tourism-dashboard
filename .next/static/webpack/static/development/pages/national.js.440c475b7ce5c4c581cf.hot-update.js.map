{"version":3,"file":"static/webpack/static/development/pages/national.js.440c475b7ce5c4c581cf.hot-update.js","sources":["webpack:///./components/diff-table.js"],"sourcesContent":["export default class DiffTable extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n\n\n  }\n\n  createHead = () => {\n    var length = Object.keys(this.props.evolution).length\n    let table = []\n    let children = []\n\n    Object.keys(this.props.evolution).forEach((value, i) => {\n      if ((i % Math.ceil(length / 2) == 0 && i != 0)) {\n        table.push(<tr><th scope=\"col\"></th>{children}</tr>);\n        children = [];\n      }\n      children.push(<th key={`head-${value}`}>{value}</th>)\n      if (i == length - 1) table.push(<tr><th scope=\"col\"></th>{children}</tr>);\n    })\n    return table\n  }\n\n  createBody = () => {\n    var length = Object.keys(this.props.evolution).length\n    let table = []\n    let children = []\n    Object.keys(this.props.evolution).forEach((year, i) => {\n      {\n\n        [this.props.year, this.props.year - 1, 'diff'].map(rowVar => {\n          if ((i % Math.ceil(length / 2) == 0 && i != 0)) {\n            table.push(\n              <tr key={`body-tr-${rowVar}`}>\n                <th key={`body-th-${rowVar}`} scope=\"row\">{rowVar}</th>\n                {children}\n              </tr>\n            )\n            children = [];\n          }\n          var value = this.props.evolution[year][rowVar][this.props.var];\n          if (rowVar == 'diff') {\n            children.push(\n              <td\n                key={`body-td-${value}-${year}`}\n                style={{ fontWeight: \"bold\", color: (value > 0 ? 'LimeGreen\t' : 'red') }}>\n                {value > 0 ? `+${value}%` : `${value}%`}\n              </td>)\n          }\n          else children.push(<td key={`body-td-${value}-${year}`}>{value}</td>)\n          if(i==length-1){\n            table.push(\n              <tr key={`body-tr-${rowVar}`}>\n                <th key={`body-th-${rowVar}`} scope=\"row\">{rowVar}</th>\n                {children}\n              </tr>\n            )\n          }\n        })\n      }\n    })\n    return table\n  }\n\n  render() {\n    var length = Object.keys(this.props.evolution).length;\n    return (\n      <div>\n        {/* <h3>{this.props.var} evolution</h3> */}\n        <table style={{ fontSize: 'small' }} className=\"table\">\n          <thead>\n            {this.createHead()}\n            {/* <tr>\n              <th scope=\"col\"></th>\n              {Object.keys(this.props.evolution).map((value, i) => {\n                console.log('lenght: ', Math.ceil(length-1/2))\n                return (<th key={`head-${value}`}>{value}</th>)\n              })}\n            </tr> */}\n          </thead>\n          <tbody>\n            {this.createBody()}\n            {/* {[this.props.year, this.props.year - 1, 'diff'].map(rowVar => {\n              return (\n                <tr key={`body-tr-${rowVar}`}>\n                  <th key={`body-th-${rowVar}`}scope=\"row\">{rowVar}</th>\n                  {Object.keys(this.props.evolution).map((year) => {\n                    var value = this.props.evolution[year][rowVar][this.props.var];\n                    if (rowVar == 'diff') {\n                      return (\n                      <td \n                        key={`body-td-${value}-${year}`} \n                        style={{ fontWeight: \"bold\", color: (value > 0 ? 'LimeGreen\t' : 'red') }}>\n                        {value > 0 ? `+${value}%` : `${value}%`}\n                      </td>)\n                    }\n                    else return (<td key={`body-td-${value}-${year}`}>{value}</td>)\n                  })}\n                </tr>\n              )\n            })} */}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AArBA;AAuBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA9DA;AAIA;AACA;;;AA0DA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAoCA;;;;AA3GA;AACA;;;;;A","sourceRoot":""}