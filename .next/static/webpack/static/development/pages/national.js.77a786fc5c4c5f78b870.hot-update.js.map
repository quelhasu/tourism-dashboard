{"version":3,"file":"static/webpack/static/development/pages/national.js.77a786fc5c4c5f78b870.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./pages/national.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","import Head from '../components/head'\nimport axios from 'axios'\nimport GoingChart from '../components/going-chart'\nimport DiffTable from '../components/diff-table';\nimport MonthChart from '../components/month-chart';\nimport Menu from '../components/menu';\nimport Select from 'react-select';\nimport NProgress from 'nprogress'\nimport Link from 'next/link';\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst customStyles = {\n  control: (base, state) => ({\n    ...base,\n    height: '34px',\n    'min-height': '34px',\n  }),\n};\n\nexport default class National extends React.Component {\n  topYear = [\n    { value: 2014, label: '2014' },\n    { value: 2015, label: '2015' },\n    { value: 2016, label: '2016' }\n  ]\n\n  constructor(props) {\n    super(props);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.state = {\n      selectedYear: { value: props.year, label: props.year },\n      data: props.data,\n      info: {\n        topCountries: props.info.topCountries.map(el => {\n          return { value: el, label: el }\n        }),\n        topRegions: props.info.topRegions.map(el => {\n          return { value: el, label: el }\n        }),\n        topAges: props.info.topAges.map(el => {\n          return { value: el, label: el }\n        })\n      }\n    }\n  }\n\n  static async getInitialProps(context) {\n    const year = Number(context.query) || 2016\n    const response = await axios.get(`http://localhost:3000/BM/national/${year}/?countries=Belgium,France`);\n    const info = await axios.get(`http://localhost:3000/BM/national/${year}/info`)\n    return {\n      data: response.data,\n      info: info.data,\n      year: year\n    }\n  }\n\n  axiosProgress = (url) => {\n    console.log('%c' + url, 'color: blue');;\n    NProgress.start();\n    return axios.get(url)\n      .then(res => {\n        return res;\n      })\n  }\n\n  handleYearChange = async (selectedYear) => {\n    const res = await this.axiosProgress('http://localhost:3000/BM/national/' + selectedYear.value + '/?countries=Belgium,France&limit=5')\n    const info = await axios.get('http://localhost:3000/BM/national/2016/info')\n    this.setState({\n      data: res.data,\n      selectedYear,\n      info: {\n        topCountries: info.data.topCountries.map(el => {\n          return { value: el, label: el }\n        }),\n        topRegions: info.data.topRegions.map(el => {\n          return { value: el, label: el }\n        }),\n        topAges: info.data.topAges.map(el => {\n          return { value: el, label: el }\n        })\n      }\n    });\n    NProgress.done();\n  }\n\n  handleCountriesChange = async (newValue, actionMeta) => {\n    this.topCountries = newValue;\n  }\n\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await this.axiosProgress(`http://localhost:3000/BM/national/${this.state.selectedYear.value}/?countries=${this.topCountries.map(el => el.value).join()}`)\n    this.setState({ data: res.data });\n    NProgress.done();\n  }\n\n  render() {\n    const { selectedYear } = this.state;\n    return (\n      <div className=\"col\">\n        <Menu>\n          <form onSubmit={this.handleSubmit.bind(this)}>\n            <div className=\"form-group row\">\n              <div className=\"col-md-10\">\n                <Select\n                  key={JSON.stringify(this.state.info.topCountries)}\n                  defaultValue={this.state.info.topCountries}\n                  isSearchable isClearable isMulti\n                  name=\"countries\"\n                  options={this.state.info.topCountries}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select countries\"\n                  onChange={this.handleCountriesChange}\n                />\n              </div>\n              <div className=\"col-md-2\">\n                <Select\n                  key={JSON.stringify(this.state.info.topAges)}\n                  defaultValue={[this.state.info.topAges[0]]}\n                  isClearable name=\"ages\"\n                  options={this.state.info.topAges}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select ages\"\n                />\n                {/* <div className=\"col-md-2\"> */}\n                <Select style={customStyles} value={selectedYear} onChange={this.handleYearChange} options={this.topYear} />\n                {/* </div> */}\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-md-10\">\n                <Select\n                  key={JSON.stringify(this.state.info.topRegions)}\n                  defaultValue={this.state.info.topRegions}\n                  isMulti isClearable isSearchable\n                  name=\"regions\"\n                  options={this.state.info.topRegions}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select regions\"\n                />\n              </div>\n              <div className=\"col-md-2\">\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n              </div>\n            </div>\n          </form>\n        </Menu>\n        <Head title=\"National\" />\n        <h1>National</h1>\n        <GoingChart evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} />\n\n        <DiffTable evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} var='Ingoing' />\n        <DiffTable evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} var='Outgoing' />\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <MonthChart evolution={this.state.data['Monthly']} var='Ingoing' />\n          </div>\n          <div className=\"col-md-6\">\n            <MonthChart evolution={this.state.data['Monthly']} var='Outgoing' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AADA;AACA;AAOA;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AALA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAgCA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAHA;AACA;AAcA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9DA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AAAA;AACA;AAHA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAHA;AAHA;AAkBA;AACA;;;AAsDA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;;;;;;AAzHA;;;;;;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;AAhCA;AACA;;;;;A","sourceRoot":""}