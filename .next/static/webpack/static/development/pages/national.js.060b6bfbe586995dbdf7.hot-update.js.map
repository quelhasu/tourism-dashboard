{"version":3,"file":"static/webpack/static/development/pages/national.js.060b6bfbe586995dbdf7.hot-update.js","sources":["webpack:///./components/going-chart.js"],"sourcesContent":["import { Bar } from 'react-chartjs-2';\nimport { selectedColors } from \"../utils/colors\";\nconst options = {\n  datasetFill: true,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\",\n      },\n      ticks: {\n        stepSize: 50\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        beginAtZero: true, callback: function (value, index, values) {\n          return value + \"%\";\n        },\n        stepSize: 2\n      },\n    }]\n  }\n}\n\n\n\nexport default class GoingChart extends React.Component {\n\n  chartData = (props) => {\n    this.data.labels = Object.keys(props.evolution).map(key => { return key })\n  \n    this.data.datasets[0].data = Object.keys(props.evolution).map(key => {\n      return props.evolution[key][props.year]['Ingoing']\n    })\n  \n    this.data.datasets[1].data = Object.keys(props.evolution).map(key => {\n      return props.evolution[key][props.year]['Outgoing']\n    })\n  \n    const colors = orderColors(this.data.labels)\n  \n    this.data.datasets[0].backgroundColor = colors.ingoing\n    this.data.datasets[0].borderColor = colors.ingoing\n  \n    this.data.datasets[1].backgroundColor = colors.outgoing\n    this.data.datasets[1].borderColor = colors.outgoing\n  }\n\n  constructor(props) {\n    super(props);\n    this.data = {\n      labels:'',\n      datasets: [\n        {\n          label: 'Ingoing',\n          borderWidth: 1,\n        },\n        {\n          label: 'Outgoing',\n          borderWidth: 1,\n        }\n      ]\n    }\n    this.chartData(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.chartData(nextProps);\n  }\n\n  render() {\n    // this\n    // Object.keys(this.props.evolution).forEach((key, i) => {\n    //   // console.log(this.props.evolution[key][this.props.year])\n    //   // console.log(i, this.props.evolution[key])\n    //   // if(i == 1) return props.evolution[year]['Ingoing']\n    // });\n    return (\n      <div>\n        <Bar\n          data={this.data}\n          width={100}\n          height={20}\n          options={options}\n        />\n      </div>\n    )\n  }\n\n}\n\nfunction orderColors(names) {\n  console.log('Names Going Chart: ', names);\n  var alpha = \"0.3\"\n  var ingoing = [],\n    outgoing = [];\n  for (var i = 0; i < names.length; i++) {\n\n    ingoing.push(selectedColors[names[i]]);\n    outgoing.push(selectedColors[names[i]].replace('rgb', 'rgba').replace(')', ',' + alpha + ')'));\n  };\n  return {\n    ingoing: ingoing,\n    outgoing: outgoing\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAJA;AADA;AATA;AALA;AACA;AA0BA;;;;;AAsBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAnBA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAPA;AACA;AAYA;AACA;AAhBA;AAgBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAQA;;;;AA7DA;AACA;AADA;AACA;AAgEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;;;;A","sourceRoot":""}