{"version":3,"file":"static/webpack/static/development/pages/national.js.13b78af1be359cdb59eb.hot-update.js","sources":["webpack:///./pages/national.js","webpack:///./utils/colors.js"],"sourcesContent":["import Head from '../components/head'\nimport axios from 'axios'\nimport GoingChart from '../components/going-chart'\nimport DiffTable from '../components/diff-table';\nimport MonthChart from '../components/month-chart';\nimport Menu from '../components/menu';\nimport Select from 'react-select';\nimport NProgress from 'nprogress'\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport Link from 'next/link'\nimport { nationalSelectedColors } from '../utils/colors'\nimport { national, nationalInfo } from '../test/database.js'\n\nexport default class National extends React.Component {\n  topYear = [\n    { value: 2014, label: '2014' },\n    { value: 2015, label: '2015' },\n    { value: 2016, label: '2016' }\n  ]\n\n  state = {\n    selectedYear: { value: this.props.year, label: this.props.year },\n    data: this.props.data,\n    info: {\n      topCountries: this.props.info.topCountries.map(el => {\n        return { value: el, label: el }\n      }),\n      topRegions: this.props.info.topRegions.map(el => {\n        return { value: el, label: el }\n      }),\n      topAges: this.props.info.topAges.map(el => {\n        return { value: el, label: el }\n      })\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.selected = JSON.parse(JSON.stringify(this.state.info));\n  }\n\n  static async getInitialProps({ req }) {\n    const year = Number(req.params.year) || 2016\n    // const response = await axios.get(`http://localhost:3000/BM/national/${year}/?countries=Belgium,France`);\n    // const info = await axios.get(`http://localhost:3000/BM/national/${year}/info/?limit=10`)\n\n    return {\n      data: national,\n      info: nationalInfo,\n      year: year\n    }\n  }\n\n  axiosProgress = (url) => {\n    console.log('%c' + url, 'color: blue');;\n    NProgress.start();\n    return axios.get(url)\n      .then(res => {\n        return res;\n      })\n  }\n\n  handleYearChange = async (selectedYear) => {\n    const res = await this.axiosProgress(`http://localhost:3000/BM/national/${selectedYear.value}/`)\n    const info = await axios.get(`http://localhost:3000/BM/national/${selectedYear.value}/info`)\n    this.setState({\n      data: res.data,\n      selectedYear,\n      info: {\n        topCountries: info.data.topCountries.map(el => {\n          return { value: el, label: el }\n        }),\n        topRegions: info.data.topRegions.map(el => {\n          return { value: el, label: el }\n        }),\n        topAges: info.data.topAges.map(el => {\n          return { value: el, label: el }\n        })\n      }\n    });\n    this.selected = JSON.parse(JSON.stringify(this.state.info));\n    NProgress.done();\n  }\n\n  handleCountriesChange = async (newValue, actionMeta) => {\n    this.selected.topCountries = newValue\n  }\n\n  handleRegionsChange = async (newValue, actionMeta) => {\n    this.selected.topRegions = newValue\n  }\n\n  handleAgesRange = async (newValue, actionMeta) => {\n    this.selected.topAges = newValue\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await this.axiosProgress(\n      (`http://localhost:3000/BM/national/${this.state.selectedYear.value}/?\\\n      countries=${this.selected.topCountries.map(el => el.value).join()}&\\\n      regions=${this.selected.topRegions.map(el => el.value).join()}&\\\n      ages=${this.selected.topAges.value || \"-\"}`)\n        .replace(/ /g, \"\")\n    )\n    this.setState({ data: res.data });\n    NProgress.done();\n  }\n\n  render() {\n    const { selectedYear } = this.state;\n    return (\n      <div className=\"col\">\n        <div className=\"row\">\n          <div className=\"col-md-11\">\n            <Nav className=\"justify-content-center\">\n              {this.topYear.map(({ value, label }) => (\n                <NavItem key={`nav-navitem-${label}`}>\n                  <Link key={`nav-navitem-link${label}`} href={`${value}`}><a className=\"nav-link\">{label} </a></Link>\n                </NavItem>\n              ))}\n            </Nav>\n          </div>\n        </div>\n        <Menu>\n          <form onSubmit={this.handleSubmit.bind(this)}>\n            <div className=\"form-group row\">\n              <label className=\"col-md-1 col-form-label\">Countries</label>\n              <div className=\"col-md-11\">\n                <Select\n                  key={JSON.stringify(this.state.info.topCountries)}\n                  defaultValue={this.state.info.topCountries}\n                  isSearchable isClearable isMulti\n                  name=\"countries\"\n                  closeMenuOnSelect={false}\n                  options={this.state.info.topCountries}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Select..\"\n                  onChange={this.handleCountriesChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label className=\"col-md-1 col-form-label\">Regions</label>\n              <div className=\"col-md-11\">\n                <Select\n                  key={JSON.stringify(this.state.info.topRegions)}\n                  defaultValue={this.state.info.topRegions}\n                  isMulti isClearable isSearchable\n                  name=\"regions\"\n                  closeMenuOnSelect={false}\n                  options={this.state.info.topRegions}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select\"\n                  onChange={this.handleRegionsChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              {/* <label className=\"col-md-1 col-form-label ml-auto\">Year</label>\n              <div className=\"col-md-2 \">\n                <Select value={selectedYear} onChange={this.handleYearChange} options={this.topYear} />\n              </div> */}\n              <label className=\"col-md-1 col-form-label  ml-auto\">Ages</label>\n              <div className=\"col-md-2\">\n                <Select\n                  key={JSON.stringify(this.state.info.topAges)}\n                  defaultValue={[this.state.info.topAges[0]]}\n                  name=\"ages\"\n                  options={this.state.info.topAges}\n                  className=\"basic-multi-select\"\n                  classNamePrefix=\"select\"\n                  onChange={this.handleAgesRange}\n                />\n              </div>\n              <div className=\"col-auto\">\n                <button type=\"submit\" className=\"btn btn-outline-primary\">Update</button>\n              </div>\n            </div>\n\n          </form>\n        </Menu>\n\n        <Head title=\"National\" />\n        <h1>National</h1>\n\n        <div className=\"row\">\n          <div className=\"col dataViz\">\n            <GoingChart evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} colors={nationalSelectedColors} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col dataViz\">\n            <h5><i class=\"fas fa-plane-arrival\"></i> Ingoing evolution</h5>\n            <DiffTable evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} var='Ingoing' />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col dataViz\">\n          <h5><i class=\"fas fa-plane-departure\"></i> Outgoing evolution</h5>\n            <DiffTable evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} var='Outgoing' />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col dataViz\">\n            <MonthChart height='150' evolution={this.state.data['Monthly']} var='Ingoing' colors={nationalSelectedColors} />\n          </div>\n          <div className=\"col dataViz\">\n            <MonthChart height='150' evolution={this.state.data['Monthly']} var='Outgoing' colors={nationalSelectedColors} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n","exports.nationalSelectedColors = {\n\t\"Aquitaine\":'rgb(181, 46, 58)',\n\t\"Midi-Pyrénées\":'rgb(240, 140, 60)',\n\t\"Poitou-Charentes\":'rgb(255, 99, 132)',\n\t\"Île-de-France\":'rgb(255, 205, 86)',\n\t\"Languedoc-Roussillon\": 'rgb(220, 59, 59)',\n\t\"Provence-Alpes-Côte d'Azur\": 'rgb(241, 175, 65)',\n\t\"Pays de la Loire\":'rgb(177, 193, 78)',\n\t\"Centre\":'rgb(210, 210, 210)',\n\t\"Rhône-Alpes\":'rgb(59, 52, 96)',\n\t\"Bretagne\":'rgb(13, 32, 98)',\n\t\"Limousin\":'rgb(61, 138, 63)',\n\t\"Auvergne\": 'rgb(101, 61, 138)',\n\t\"Basse-Normandie\": 'rgb(138, 101, 61)',\n\t\"Nord-Pas-de-Calais\": 'rgb(138, 101, 61)',\n\t\"Picardie\": 'rgb(223, 102, 99)',\n\t\"Franche-Comté\": 'rgb(61, 138, 63)',\n\t\"Haute-Normandie\":'rgb(128, 138, 61) ',\n\t\"Bourgogne\":'rgb(99, 220, 223) ',\n\t\"Alsace\":'rgb(8,76,97)',\n\t\"Corse\":'rgb(99,55,44)',\n\t\"Champagne-Ardenne\":'rgb(251,176,45)'\n};\n\nexports.internationalSelectedColors = {\n\t\"France\":'rgb(54, 162, 235)',\n\t\"-\":'rgb(201, 203, 207)',\n\t\"United Kingdom\":'rgb(255, 99, 132)',\n\t\"United States\":'rgb(255, 205, 86)',\n\t\"Spain\": 'rgb(255, 159, 64)',\n\t\"Belgium\": 'rgb(153, 102, 255)',\n\t\"Italy\":'rgb(75, 192, 192)',\n\t\"Switzerland\":'rgb(240, 240, 240)',\n\t\"Australia\":'rgb(240, 140, 60)',\n\t\"Germany\":'rgb(206, 61, 107)'\n};\n\nexports.groupingSelectedColors = {\n\t\"Bordeaux\":'rgb(54, 162, 235)',\n\t\"Arcachon\":'rgb(201, 203, 207)',\n\t\"Libourne\":'rgb(255, 99, 132)',\n\t\"Lesparre-Médoc\":'rgb(255, 205, 86)',\n\t\"Langon\": 'rgb(255, 159, 64)',\n\t\"Blaye\": 'rgb(153, 102, 255)',\n\t\"Bayonne\":'rgb(75, 192, 192)',\n\t\"Mont-de-Marsan\":'rgb(230, 230, 230)',\n\t\"Sarlat-la-Canéda\":'rgb(240, 140, 60)',\n\t\"Dax\":'rgb(206, 61, 107)'\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAuBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AArBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAkBA;AAfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAHA;AACA;AAeA;AAmBA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAHA;AACA;AAcA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5BA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyDA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1DA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AANA;AAEA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;;;AAqEA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AA9KA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;AAnCA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;A","sourceRoot":""}