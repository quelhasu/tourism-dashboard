{"version":3,"file":"static/webpack/static/development/pages/international.js.629c45d66590a3119a2f.hot-update.js","sources":["webpack:///./pages/international.js"],"sourcesContent":["import Head from '../components/head'\nimport axios from 'axios'\nimport ReviewChart from '../components/review-chart'\nimport DiffTable from '../components/diff-table';\nimport MonthChart from '../components/month-chart';\nimport Menu from '../components/menu';\nimport Select from 'react-select';\nimport NProgress from 'nprogress'\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport Link from 'next/link'\nimport { internationalSelectedColors } from '../utils/colors'\n\nexport default class International extends React.Component {\n  topYear = [\n    { value: 2014, label: '2014' },\n    { value: 2015, label: '2015' },\n    { value: 2016, label: '2016' }\n  ]\n\n  state = {\n    selectedYear: { value: this.props.year, label: this.props.year },\n    data: this.props.data,\n    info: {\n      topCountries: this.props.info.topCountries.map(el => {\n        return { value: el, label: el }\n      }),\n      topAges: this.props.info.topAges.map(el => {\n        return { value: el, label: el }\n      })\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.selected = JSON.parse(JSON.stringify(this.state.info));\n  }\n\n  static async getInitialProps({ req }) {\n    const year = Number(req.params.year) || 2016\n    const response = await axios.get(`http://localhost:3000/BM/international/${year}/?countries=Belgium,France`);\n    const info = await axios.get(`http://localhost:3000/BM/international/${year}/info/?limit=10`)\n\n    return {\n      data: response.data,\n      info: info.data,\n      year: year\n    }\n  }\n\n  axiosProgress = (url) => {\n    console.log('%c' + url, 'color: blue');;\n    NProgress.start();\n    return axios.get(url)\n      .then(res => {\n        return res;\n      })\n  }\n\n  handleYearChange = async (selectedYear) => {\n    const res = await this.axiosProgress(`http://localhost:3000/BM/international/${selectedYear.value}/`)\n    const info = await axios.get(`http://localhost:3000/BM/international/${selectedYear.value}/info`)\n    this.setState({\n      data: res.data,\n      selectedYear,\n      info: {\n        topCountries: info.data.topCountries.map(el => {\n          return { value: el, label: el }\n        }),\n        topAges: info.data.topAges.map(el => {\n          return { value: el, label: el }\n        })\n      }\n    });\n    this.selected = JSON.parse(JSON.stringify(this.state.info));\n    NProgress.done();\n  }\n\n  handleCountriesChange = async (newValue, actionMeta) => {\n    this.selected.topCountries = newValue\n  }\n\n  handleRegionsChange = async (newValue, actionMeta) => {\n    this.selected.topRegions = newValue\n  }\n\n  handleAgesRange = async (newValue, actionMeta) => {\n    this.selected.topAges = newValue\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await this.axiosProgress(\n      (`http://localhost:3000/BM/international/${this.state.selectedYear.value}/?\\\n      countries=${this.selected.topCountries.map(el => el.value).join()}&\\\n      ages=${this.selected.topAges.value || \"-\"}`)\n        .replace(/ /g, \"\")\n    )\n    this.setState({ data: res.data });\n    NProgress.done();\n  }\n\n  render() {\n    const { selectedYear } = this.state;\n    return (\n      <div className=\"col body-content\">\n        <div className=\"options-menu\">\n          <div className=\"row\">\n            <div className=\"col-md-11\">\n              <Nav className=\"justify-content-center\">\n                {this.topYear.map(({ value, label }) => (\n                  <NavItem key={`nav-navitem-${label}`}>\n                    <Link key={`nav-navitem-link${label}`} href={`/${value}`}><a className=\"nav-link\">{label} </a></Link>\n                  </NavItem>\n                ))}\n              </Nav>\n            </div>\n          </div>\n          <Menu>\n            <form onSubmit={this.handleSubmit.bind(this)}>\n              <div className=\"form-group row\">\n                <label className=\"col-md-1 col-form-label\">Countries</label>\n                <div className=\"col-md-11\">\n                  <Select\n                    key={JSON.stringify(this.state.info.topCountries)}\n                    defaultValue={this.state.info.topCountries}\n                    isSearchable isClearable isMulti\n                    name=\"countries\"\n                    closeMenuOnSelect={false}\n                    options={this.state.info.topCountries}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select..\"\n                    onChange={this.handleCountriesChange}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                {/* <label className=\"col-md-1 col-form-label ml-auto\">Year</label>\n              <div className=\"col-md-2 \">\n                <Select value={selectedYear} onChange={this.handleYearChange} options={this.topYear} />\n              </div> */}\n                <label className=\"col-md-1 col-form-label  ml-auto\">Ages</label>\n                <div className=\"col-md-2\">\n                  <Select\n                    key={JSON.stringify(this.state.info.topAges)}\n                    defaultValue={[this.state.info.topAges[0]]}\n                    name=\"ages\"\n                    options={this.state.info.topAges}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onChange={this.handleAgesRange}\n                  />\n                </div>\n                <div className=\"col-auto\">\n                  <button type=\"submit\" className=\"btn btn-outline-primary\">Update</button>\n                </div>\n              </div>\n\n            </form>\n          </Menu>\n        </div>\n        <div className=\"col\">\n          <div className=\"test\">\n            <Head title=\"International\" />\n            <h1>International</h1>\n            <div className=\"row\">\n              <div className=\"col dataViz\">\n                <ReviewChart evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} colors={internationalSelectedColors} />\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col dataViz\">\n                  <DiffTable evolution={this.state.data['Evolution']} year={this.state.selectedYear['value']} var='value' />\n                </div>\n                <div className=\"row\">\n                  <div className=\"col dataViz\">\n                    <MonthChart height={80} evolution={this.state.data['Monthly']} var='Reviews' colors={internationalSelectedColors} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n        )\n      }\n    \n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAoBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAlBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAeA;AAZA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAHA;AACA;AAYA;AAmBA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAHA;AACA;AAWA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5BA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/CA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AALA;AAEA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;;;AAiEA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AASA;;;;;;;;;;;;AApJA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;;AAhCA;AACA;;;;;A","sourceRoot":""}